<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CB W21 on </title>
    <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/</link>
    <description>Recent content in CB W21 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language><atom:link href="https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blatt 01: Scanner und Parser</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet01/</guid>
      <description>A1.1: Grammatik Modifizieren Sie die Grammatik für Small C folgendermaßen:
 Entfernen Sie folgende Elemente:  die for-Schleife das break-Statement die Zufallszahlengenerierung mit ?n die Zuweisungsoperatoren +=, -=, *= und /= die Modulo-Operation % den &amp;ldquo;Elvis&amp;rdquo;-Operator ?: (ternäre Abfrage) die Auto-Inkrement-/-Dekrement-Operatoren ++ und --    Bestimmen Sie die terminalen Symbole Ihrer Grammatik und deren Aufbau.  Erklären Sie, wo in der Grammatik das Konzept der Zuweisung auftaucht und welche Auswirkungen dies auf die erlaubten Programme hat.</description>
    </item>
    
    <item>
      <title>CFG, LL-Parser</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/cfg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/cfg/</guid>
      <description>Wiederholung Folie: Frage Lorem Ipsum.
Motivation Folie: Idee/Problem Lorem Ipsum.
Themen für heute Lorem Ipsum.
Thema I Folie 1 ...
Folie 2 ...
Folie 3 ...
Thema II Folie 1 ...
Folie 2 ...
Folie 3 ...
Wrap-Up Wrap-Up Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Reguläre Sprachen, Ausdrucksstärke</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/lexing/regular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/lexing/regular/</guid>
      <description>Wiederholung Folie: Frage Lorem Ipsum.
Motivation Folie: Idee/Problem Lorem Ipsum.
Themen für heute Lorem Ipsum.
Thema I Folie 1 ...
Folie 2 ...
Folie 3 ...
Thema II Folie 1 ...
Folie 2 ...
Folie 3 ...
Wrap-Up Wrap-Up Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Semantische Analyse: Symboltabellen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/intro/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Struktur eines Compilers</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intro/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intro/overview/</guid>
      <description>Sprachen verstehen, Texte transformieren  The cat runs quickly.
 =&amp;gt; Struktur? Bedeutung?
Wir können hier (mit steigender Abstraktionsstufe) unterscheiden:
  Sequenz von Zeichen
  Wörter: Zeichenketten mit bestimmten Buchstaben, getrennt durch bestimmte andere Zeichen; Wörter könnten im Wörterbuch nachgeschlagen werden
  Sätze: Anordnung von Wörtern nach einer bestimmten Grammatik, Grenze: Satzzeichen
Hier (vereinfacht): Ein Satz besteht aus Subjekt und Prädikat. Das Subjekt besteht aus einem oder keinen Artikel und einem Substantiv.</description>
    </item>
    
    <item>
      <title>Syntaxgesteuerte Interpreter</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/interpretation/syntaxdriven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/interpretation/syntaxdriven/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Überblick Zwischencode</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intermediate/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intermediate/intro/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>AST-basierte Interpreter: Basics</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/interpretation/astdriven-part1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/interpretation/astdriven-part1/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Attributierte Grammatiken</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/attribgrammars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/attribgrammars/</guid>
      <description>Wiederholung Folie: Frage Lorem Ipsum.
Motivation Folie: Idee/Problem Lorem Ipsum.
Themen für heute Lorem Ipsum.
Thema I Folie 1 ...
Folie 2 ...
Folie 3 ...
Thema II Folie 1 ...
Folie 2 ...
Folie 3 ...
Wrap-Up Wrap-Up Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Bandbreite der Programmiersprachen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intro/languages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intro/languages/</guid>
      <description>99 Bottles of Beer  99 bottles of beer on the wall, 99 bottles of beer. Take one down and pass it around, 98 bottles of beer on the wall.
98 bottles of beer on the wall, 98 bottles of beer. Take one down and pass it around, 97 bottles of beer on the wall.
[...]
2 bottles of beer on the wall, 2 bottles of beer. Take one down and pass it around, 1 bottle of beer on the wall.</description>
    </item>
    
    <item>
      <title>Blatt 02: Semantische Analyse</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet02/</guid>
      <description>A2.1: Erweiterung der Grammatik: Funktionen Erweitern Sie die Grammatik von Blatt 01 um die Möglichkeit, Funktionen definieren und aufrufen zu können. Funktionen sollen (wie in C) nicht innerhalb von Funktionen definiert werden können. Globale Variablen sollen ebenfalls zwischen den Funktionsdefinitionen/-aufrufen definiert werden können.
Hinweis: Sogenannte Vorwärtsdeklarationen sind nicht nötig.
A2.2: Grammatik und Scanner-/Parser-Generatoren Erzeugen Sie mithilfe der Grammatik und ANTLR einen Scanner und Parser, den Sie für die folgenden Aufgaben nutzen.</description>
    </item>
    
    <item>
      <title>Lexer: Implementierungen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/lexing/implementation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/lexing/implementation/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>LL-Parser selbst implementiert</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/ll-parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/ll-parser/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Nested Scopes</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/scopes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/scopes/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Anwendungen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intro/applications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/intro/applications/</guid>
      <description>Anwendung: Compiler   Wie oben diskutiert: Der Sourcecode durchläuft alle Phasen des Compilers, am Ende fällt ein ausführbares Programm heraus. Dieses kann man starten und ggf. mit Inputdaten versehen und erhält den entsprechenden Output. Das erzeugte Programm läuft i.d.R. nur auf einer bestimmten Plattform.
Beispiele: gcc, clang, ...
Anwendung: Interpreter   Beim Interpreter durchläuft der Sourcecode nur das Frontend, also die Analyse. Es wird kein Code erzeugt, stattdessen führt der Interpreter die Anweisungen im AST bzw.</description>
    </item>
    
    <item>
      <title>AST-basierte Interpreter: Funktionen und Klassen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/interpretation/astdriven-part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/interpretation/astdriven-part2/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Blatt 03: Optimierung</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet03/</guid>
      <description>A3.1: Konstruktion DAG Konstruieren Sie aus Ihrem AST einen DAG. Ergänzen Sie Ihre Ausgabefunktion, so dass auch der DAG als DOT-Code formatiert ausgegeben wird.
Hinweis: Geben Sie sowohl den ursprünglichen DAG als auch den DAG nach der Optimierung (siehe nächste Aufgabe) aus.
A3.2: Optimierung Welche der in der Vorlesung besprochenen Optimierungen sind in der betrachteten Sprache sinnvoll? Begründen Sie Ihre Analyse und führen Sie diese Optimierungen auf dem DAG durch.</description>
    </item>
    
    <item>
      <title>Flex: Lexer generieren</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/lexing/flex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/lexing/flex/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Funktionen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/functions/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>LL-Parser: Fortgeschrittene Techniken</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/ll-advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/ll-advanced/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Typen und Type Checking</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/types/</guid>
      <description>Wiederholung Folie: Frage Lorem Ipsum.
Motivation Folie: Idee/Problem Lorem Ipsum.
Themen für heute Lorem Ipsum.
Thema I Folie 1 ...
Folie 2 ...
Folie 3 ...
Thema II Folie 1 ...
Folie 2 ...
Folie 3 ...
Wrap-Up Wrap-Up Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Blatt 04: LLVM-IR</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet04/</guid>
      <description>A4.1: Sprachumfang im LLVM-IR Legen Sie fest, welche LLVM-IR-Befehle Sie für Ihr Projekt benötigen.
 https://releases.llvm.org/1.6/docs/CommandGuide/html/llc.html https://releases.llvm.org/1.6/docs/CommandGuide/html/lli.html http://llvm.org/devmtg/2010-11/Naumann-Cling.pdf  A4.2: Erzeugung von LLVM-IR Vervollständigen Sie den Compiler mit LLVM-Werkzeugen: Ihr Compiler soll LLVM-IR ausgeben, der mit den LLVM-Werkzeugen in ein ausführbares Programm übersetzt werden kann.</description>
    </item>
    
    <item>
      <title>Strukturen und Klassen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/semantics/symboltables/classes/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Blatt 05: Interpreter</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/assignments/sheet05/</guid>
      <description>A5.1: Interpreter Bauen Sie einen Tree-Walking-Interpreter in Ihr Projekt ein:
 Lesen Sie zunächst den zu interpretierenden Small-C-Code aus einer Datei ein. Realisieren Sie die Funktionen readint und writeint als native Funktionen im Interpreter.  A5.2: Interaktivität Erweitern Sie Ihren Interpreter um Interaktivität:
 Der Interpreter soll einen Prompt in der Konsole anbieten Der Interpreter soll Code zeilenweise von der Standard-Eingabe lesen und verarbeiten Zur Eingabe mehrzeiliger Konstrukte sehen Sie entweder das Einlesen von Codeblöcken aus Dateien vor oder implementieren Sie entsprechend eine &amp;ldquo;logische Einrückung&amp;rdquo; für den Prompt als visuelles Feedback für den User  Sie können sich hier am Interpreter für Lox orientieren.</description>
    </item>
    
    <item>
      <title>Syntaxanalyse: LR-Parser</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/lr-part/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/lr-part/</guid>
      <description>Wiederholung Folie: Frage Lorem Ipsum.
Motivation Folie: Idee/Problem Lorem Ipsum.
Themen für heute Lorem Ipsum.
Thema I Folie 1 ...
Folie 2 ...
Folie 3 ...
Thema II Folie 1 ...
Folie 2 ...
Folie 3 ...
Wrap-Up Wrap-Up Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Optimierung und Datenflussanalyse</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/optimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/optimization/</guid>
      <description>Wiederholung Folie: Frage Lorem Ipsum.
Motivation Folie: Idee/Problem Lorem Ipsum.
Themen für heute Lorem Ipsum.
Thema I Folie 1 ...
Folie 2 ...
Folie 3 ...
Thema II Folie 1 ...
Folie 2 ...
Folie 3 ...
Wrap-Up Wrap-Up Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Error-Recovery</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/recovery/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Grenze Lexer und Parser</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/finalwords/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/parsing/finalwords/</guid>
      <description>Motivation Lorem Ipsum. Starte mit H2-Level. ...
Folie 2 ...
Folie 3 ...
Folie 4 ...
Folie 5 ...
Folie 6 ...
Wrap-Up ...</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/credits/</guid>
      <description>Beim Generieren der Vortrags-Folien und der Webseiten für das Unterrichtsmaterial kommen einige externe Projekte zum Einsatz, die unter eigenen Lizenzen stehen und die nicht von der CC BY-SA 4.0 Lizenz dieses Projekts erfasst sind.
Erzeugen der Folien Für das Erzeugen der Vortrags-Folien kommen u.a. folgende Projekte zum Einsatz:
 Pandoc Pandoc-Lecture TeX Live Beamer Metropolis  Erzeugen der Webseiten Für die Vorverarbeitung des Materials werden die beiden Projekte eingesetzt:
 Pandoc Pandoc-Lecture  Die Webseiten für das Unterrichtsmaterial werden mit folgenden Projekten erzeugt:</description>
    </item>
    
    <item>
      <title>Datenschutzerklärung</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/privacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/privacy/</guid>
      <description>Hinweise zum Datenschutz: Cookies, Informationen, &amp;hellip; (TODO: zu klären mit ORCA-Team)</description>
    </item>
    
    <item>
      <title>Fahrplan</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/schedule/</guid>
      <description>Woche Vorlesung Praktikum/Übung Verschiedenes      1 (KW40)     MISC &amp;gt; Syllabus (BC, cagi) Hinweis: Kick-Off (Zoom)   INTRO &amp;gt; Struktur eines Compilers (cagi)   INTRO &amp;gt; Programmiersprachen (cagi)   INTRO &amp;gt; Anwendungen (cagi)            2 (KW41)     LEXING &amp;gt; Reguläre Sprachen (BC)   LEXING &amp;gt; Lexer: Implementierungen (cagi)   LEXING &amp;gt; Flex: Lexer generieren (cagi)      zweiter Teil der VL in Praktikumszeit</description>
    </item>
    
    <item>
      <title>Impressum</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/imprint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/imprint/</guid>
      <description>Hier kommt ein Impressum hin (TODO: zu klären mit ORCA-Team)</description>
    </item>
    
    <item>
      <title>Note und Credits</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/grading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/grading/</guid>
      <description>Prüfungsform: Parcours-Prüfung, 5 ECTS  Stationen 1-5: Erfolgreiche Bearbeitung der Aufgabenblätter Station 6+7: Mündliche Prüfung mit je 30 Minuten Dauer Station 8: Vortrag mit 45 Minuten Dauer   Gesamtnote: Mittelwert(mdl. Prüfung I, mdl. Prüfung II, Vortrag)  Parcours-Prüfung: Was ist das? Sie legen die Prüfung in mehreren Stationen zurück und sammeln jeweils Teilnoten, die gemittelt in eine Gesamtnote für das Modul münden.
Um eine Note und die Credit-Points zu erhalten, müssen Sie sich (wie bei allen anderen Prüfungen) für die Gesamtprüfung im LSF anmelden.</description>
    </item>
    
    <item>
      <title>Ressourcen</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/resources/</guid>
      <description>Was brauche ich? Literatur ... Basics (&amp;quot;Must Have&amp;quot;!)  &amp;quot;Compiler: Prinzipien, Techniken und Werkzeuge&amp;quot;: [Aho2008] &amp;quot;Crafting Interpreters&amp;quot;: [Nystrom2021]  Weitere empfohlene Literatur Ergänzend zum [Aho2008] empfiehlt sich ein Blick in [Mogensen2017] und [Watson2017], wo ebenfalls beinahe alle Themen (auf etwas einfacherem Niveau) besprochen werden.
Zur Vertiefung sei [Grune2012] als eine moderne Variante zum Drachenbuch empfohlen. Ebenfalls sehr interessant ist [Torczon2012], wobei hier der Fokus allerdings sehr stark auf dem Backend liegt.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.fh-bielefeld.de/elearning/data/FH-Bielefeld/lm_data/lm_1165993/misc/syllabus/</guid>
      <description>Worum geht&amp;rsquo;s hier?  Verständnis für die wichtigsten Konzepte im Compilerbau Kenntnis relevanter aktueller Tools/Frameworks Verständnis für wichtige Sprachparadigmen  =&amp;gt; Aufteilung: 40% Konzepte/Theorie, 60% Anwendung
Überblick Modulinhalte  Lexikalische Analyse: Scanner/Lexer  Reguläre Ausdrücke Klassisches Vorgehen: RegExp nach NFA (Thompson&amp;rsquo;s Construction), NFA nach DFA (Subset Construction), DFA nach Minimal DFA (Hopcroft&amp;rsquo;s Algorithm) Manuelle Implementierung, Look-Ahead Generierung mit ANTLR und Flex Error Recovery     Syntaxanalyse: Parser  Kontextfreie Grammatiken (CFG), Chomsky LL-Parser (Top-Down-Parser)  FIRST, FOLLOW Tabellenbasierte Verfahren Rekursiver Abstieg LL(1), LL(k), LL(*) Umgang mit linksrekursiven Grammatiken Umgang mit Vorrang-Regeln und Assoziativität Backtracking, Memoizing, Predicated Parsers; ANTLR4: ALL(*)   LR-Parser (Bottom-Up-Parser)  Shift-Reduce LR(0), SLR(1), LR(1), LALR(1)   Generierung mit ANTLR und Bison Error Recovery Grenze Lexer und Parser (aus praktischen Gesichtspunkten)     Symboltabellen  Berücksichtigung unterschiedlicher Sprachparadigmen Typen, Klassen, Polymorphie Namen und Scopes     Semantische Analyse und Optimierungen  Attributierte Grammatiken: L-attributed vs.</description>
    </item>
    
  </channel>
</rss>
